spring:
  flyway:
    enabled: true
#    user: postgres
#    password: root
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/user_service
    username: postgres
    password: root
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL10Dialect
#  jackson:
#    serialization:
#      FAIL_ON_EMPTY_BEANS: false
  logging:
    level:
      com.mirasoft.mike: DEBUG
  file:
    name: application.log
security:
  app:
    jwtSecret: SimpleLongPhraseForSecretJwtTokenSimpleLongPhraseForSecretJwtTokenSimpleLongPhraseForSecretJwtToken
    jwtExpirationMs: 84600000
#  security:
#    oauth2:
#      client:
#        clientId: 957202013586-sinbci4m9vnon7f8uo25q24fgbrjoq8f.apps.googleusercontent.com
#        clientSecret: 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
#        clientAuthenticationScheme: form
#        scope: openid,email,profile
#        accessTokenUri: https://www:googleapis:com/oauth2/v4/token
#        userAuthorizationUri: https://accounts:google:com/o/oauth2/v2/auth
#      resource:
#        userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo
#        preferTokenInfo: true
#      server:
#        port: 9000
#  main:
#   allow-bean-definition-overriding: true

#        registration:
#          github:
#            clientId: github-client-id
#            clientSecret: github-client-secret

#   security.oauth2.client.clientId=620652621050-v6a9uqrjq0ejspm5oqbek48sl6od55gt.apps.googleusercontent.com
#   security.oauth2.client.clientSecret=Ho0qL86KNYCBwYY8bkJDLjWN
#   security.oauth2.client.clientAuthenticationScheme=form
#   security.oauth2.client.scope=openid,email,profile
#   security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v4/token
#   security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/v2/auth
#   security.oauth2.resource.userInfoUri=https://www.googleapis.com/oauth2/v3/userinfo
#   security.oauth2.resource.preferTokenInfo=true
#
#   server.port=9000